{"version":3,"sources":["components/nav.js","components/search.js","components/poster.js","components/ratings.js","components/description.js","components/mainContentContainer.js","components/Content.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","backgroundColor","display","justifyContent","alignItems","height","appBar","width","fontFamily","title","ButtonAppBar","classes","react_default","a","createElement","className","AppBar","Object","defineProperty","position","id","Toolbar","Typography","variant","src","Button","color","container","flexWrap","textField","marginLeft","spacing","marginRight","dense","marginTop","menu","iconButton","TextFields","props","noValidate","autoComplete","onSubmit","getNameFromSearch","TextField","label","placeholder","margin","name","IconButton","type","aria-label","Search_default","Poster","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","style","padding","imgPoster","alt","Component","progress","Description","ratings","objectSpread","itemData","Ratings","rate","console","log","Value","Title","Year","Runtime","Plot","Actors","MainContent","poster","content","description","Content","mainContentContainer","data","App","getName","e","preventDefault","itemName","target","elements","value","setState","getDes","map","items","fetch","imdbID","then","response","json","test","itemDescr","concat","disp","_this2","Search","prevProps","prevState","_this3","Response","alert","output","components_Content","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d6721450.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: '#081C24',\r\n    display: 'flex',\r\n    justifyContent :'center',\r\n    alignItems :'center',\r\n    height: '80px',\r\n    \r\n  },\r\n  appBar :{\r\n    backgroundColor: '#081C24',\r\n    width: '70%',\r\n    height: '70px',\r\n    fontFamily: \"'Oswald', sans-serif\"\r\n  \r\n  },\r\n  \r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className ={classes.appBar} id = 'navBar' id = 'navBar'>\r\n        <Toolbar>\r\n          \r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <img src = \"https://img14.androidappsapk.co/300/0/e/0/ordabool.themoviedb.png\" height = '76' width = '80' />\r\n          </Typography>\r\n          <Button color=\"inherit\"> <span className = \"navFont\">Movies And TV Shows</span></Button>\r\n          \r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent :'center',\r\n    alignItems :'center',\r\n    flexWrap: 'wrap',\r\n    width: '100%',\r\n    backgroundColor: 'white',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: '60%',\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n  iconButton: {\r\n    marginTop :'20px',\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function TextFields(props) {\r\n  const classes = useStyles();\r\n \r\n\r\n\r\n  return (\r\n    <form className={classes.container} noValidate autoComplete=\"off\" onSubmit = {props.getNameFromSearch} id = 'searchBar' >\r\n      \r\n      \r\n      <TextField\r\n        id=\"standard-with-placeholder standard-full-width \"\r\n        label=\"Search\"\r\n        placeholder=\"Search\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        name = 'itemName'\r\n        \r\n      />\r\n\r\n      <IconButton type = 'submit' className={classes.iconButton} aria-label=\"Search\"  >\r\n        <SearchIcon />\r\n      </IconButton>\r\n  \r\n     \r\n    </form>\r\n  );\r\n}","import React, {Component} from 'react'\r\nimport '../styles.css'\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Poster extends Component{\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\n  render(){\r\n    return(\r\n      <div style = {{padding : '10px'}}>\r\n        <img  src = {this.props.imgPoster} alt =\"Not Available\" />\r\n        \r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Poster\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  progress: {\r\n    margin: theme.spacing(0),\r\n  },\r\n}));\r\n\r\nexport default function CircularStatic() {\r\n  const classes = useStyles();\r\n  const [completed, setCompleted] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    function progress() {\r\n      setCompleted(prevCompleted => (prevCompleted >= 100 ? 0 : prevCompleted + 10));\r\n    }\r\n\r\n    const timer = setInterval(progress, 1000);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CircularProgress className={classes.progress} variant=\"static\" value={80} />\r\n      <span style = {{marginLeft: \"15px\", position:\"relative\", top: \"-13px\", fontSize: '18px', fontWeight: 'bold'}}>User Score : 8/10</span>\r\n    </div>\r\n  );\r\n}\r\n","import React, {Component} from 'react'\r\nimport Ratings from './ratings'\r\nimport '../styles.css'\r\n\r\n\r\n\r\n\r\n\r\nclass Description extends Component{\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\n  render(){\r\n      let ratings = {...this.props.itemData.Ratings}\r\n      let rate = {...ratings[0]}\r\n      console.log(rate.Value)\r\n\r\n    return(\r\n      <div className = \"description\">\r\n\r\n        <div>\r\n          <h1>{this.props.itemData.Title} - {this.props.itemData.Year} </h1>\r\n          <span>Run Time : {this.props.itemData.Runtime} </span>\r\n        </div>\r\n        <div>\r\n         <h3>IMDB : {rate.Value}  </h3> \r\n        </div>\r\n\r\n        <div>\r\n          <h3>Overview</h3>\r\n          <p>{this.props.itemData.Plot}</p>   \r\n        </div>\r\n        <div>\r\n          <h3>Main Actors</h3>\r\n         \r\n          <div className = 'actors'>\r\n            <div>\r\n              {this.props.itemData.Actors}\r\n            </div>\r\n           \r\n            \r\n          </div>\r\n          \r\n        \r\n        </div>\r\n     \r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Description\r\n","import React, {Component} from 'react'\r\nimport Poster from './poster'\r\nimport Description from './description'\r\nimport '../styles.css'\r\n\r\n\r\n\r\n\r\n\r\nclass MainContent extends Component{\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div className = 'mainContent'>\r\n        <Poster imgPoster = {this.props.content.Poster} />\r\n        <Description itemData = {this.props.content} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport default MainContent\r\n","import React, {Component} from 'react'\r\nimport MainContent from './mainContentContainer'\r\nimport '../styles.css'\r\n\r\n\r\n\r\n\r\n\r\nclass Content extends Component{\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n\r\n  render(props){\r\n    \r\n    return(\r\n      <div className = 'content'>\r\n        <MainContent content = {this.props.data} />\r\n        \r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Content","import React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport NavBar from './components/nav'\nimport Search from './components/search'\nimport Content from './components/Content'\nimport \"./styles.css\";\n\nclass App extends Component {\n  \n    constructor(){\n      super()\n      this.state = {\n          itemData: [{}],\n          name:\"\",\n          disp: 'none',\n          itemDescr: [],\n          test: \"\"\n         \n      }\n    }\n\n    componentDidMount(){\n      fetch(\"https://www.omdbapi.com/?apikey=ccc94984&s=spider-man%20far%20from%20home\")\n      .then(response => response.json())\n      .then(data => {\n\n            this.setState({\n              itemData: data.Search,\n              disp: 'block'\n            })\n            this.getDes()\n      }) \n    }\n\n   \n    \n    componentDidUpdate(prevProps, prevState){\n      if (prevState.name !== this.state.name){\n        fetch(\"https://www.omdbapi.com/?apikey=ccc94984&s=\" + this.state.name)\n          .then(response => response.json())\n          .then(data => {\n            if (data.Response === 'True'){\n                this.setState({\n                  itemData: data.Search,\n                  disp: 'block',\n                  itemDescr: []\n                  \n                })\n                 this.getDes() \n            }else{\n              alert('Movie or tv Show not found, enter a valid query')\n            }\n          })\n         \n      }\n\n     \n\n    \n    }\n\n    getName = (e) =>{\n      e.preventDefault()\n      let itemName = e.target.elements.itemName.value\n      \n\n      this.setState({\n        name : itemName\n      })\n    }\n\n      getDes = () =>{\n       let x = {}\n        this.state.itemData.map(items =>{\n          fetch(\"https://www.omdbapi.com/?apikey=ccc94984&i=\" + items.imdbID )\n          .then(response => response.json())\n          .then(data => {\n            this.setState({\n              test : data,\n              itemDescr: this.state.itemDescr.concat(data)\n            })\n            \n          })\n            \n       \n         \n        })\n\n        \n      }\n   \n     \n  \n  \n  render(){\n \n  \n    const output = this.state.itemDescr.map(items =>{\n      return (\n      <Content data = {items} />\n      )\n    })\n\n    console.log(output)\n    return (\n      \n      <div>\n        <NavBar />\n        <Search  getNameFromSearch = {this.getName} />\n        \n        \n        <div style = {{display : this.state.disp}}>\n             {output}\n        </div>\n\n        \n      </div>\n    );\n\n  }\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}