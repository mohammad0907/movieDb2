{"version":3,"sources":["components/noImage.png","components/nav.js","components/search.js","components/poster.js","components/ratings.js","components/description.js","components/mainContentContainer.js","components/Content.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","display","justifyContent","alignItems","height","appBar","width","fontFamily","title","ButtonAppBar","classes","className","AppBar","position","id","Toolbar","Typography","variant","src","Button","color","container","flexWrap","textField","marginLeft","spacing","marginRight","dense","marginTop","menu","iconButton","TextFields","props","noValidate","autoComplete","onSubmit","getNameFromSearch","TextField","label","placeholder","margin","name","IconButton","type","aria-label","Poster","state","style","padding","this","imgPoster","NoImage","alt","Component","progress","Description","ratings","itemData","Ratings","rate","console","log","Value","Title","Year","Runtime","imdbRating","Plot","Actors","MainContent","content","Content","data","App","getName","e","preventDefault","itemName","target","elements","value","setState","getDes","map","items","fetch","imdbID","then","response","json","test","itemDescr","concat","disp","Search","prevProps","prevState","Response","alert","output","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2762a877.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noImage.8df9e5fb.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: '#081C24',\r\n    display: 'flex',\r\n    justifyContent :'center',\r\n    alignItems :'center',\r\n    height: '80px',\r\n    \r\n  },\r\n  appBar :{\r\n    backgroundColor: '#081C24',\r\n    width: '70%',\r\n    height: '70px',\r\n    fontFamily: \"'Oswald', sans-serif\"\r\n  \r\n  },\r\n  \r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className ={classes.appBar} id = 'navBar' id = 'navBar'>\r\n        <Toolbar>\r\n          \r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <img src = \"https://pbs.twimg.com/profile_images/789117657714831361/zGfknUu8_400x400.jpg\" height = '76' width = '80' />\r\n          </Typography>\r\n          <Button color=\"inherit\"> <span className = \"navFont\">Movies And TV Shows</span></Button>\r\n          \r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent :'center',\r\n    alignItems :'center',\r\n    flexWrap: 'wrap',\r\n    width: '100%',\r\n    backgroundColor: 'white',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: '60%',\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n  iconButton: {\r\n    marginTop :'20px',\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function TextFields(props) {\r\n  const classes = useStyles();\r\n \r\n\r\n\r\n  return (\r\n    <form className={classes.container} noValidate autoComplete=\"off\" onSubmit = {props.getNameFromSearch} id = 'searchBar' >\r\n      \r\n      \r\n      <TextField\r\n        id=\"standard-with-placeholder standard-full-width \"\r\n        label=\"Search\"\r\n        placeholder=\"Search\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        name = 'itemName'\r\n        \r\n      />\r\n\r\n      <IconButton type = 'submit' className={classes.iconButton} aria-label=\"Search\"  >\r\n        <SearchIcon />\r\n      </IconButton>\r\n  \r\n     \r\n    </form>\r\n  );\r\n}","import React, {Component} from 'react'\r\nimport '../styles.css'\r\nimport NoImage from './noImage.png'\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Poster extends Component{\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\n  render(){\r\n    return(\r\n      <div style = {{padding : '10px'}}>\r\n        <img  src = {this.props.imgPoster === \"N/A\" ? NoImage : this.props.imgPoster} width = \"300\" height = \"445\" alt =\"Not Available\" />\r\n        \r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Poster\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  progress: {\r\n    margin: theme.spacing(0),\r\n  },\r\n}));\r\n\r\nexport default function CircularStatic() {\r\n  const classes = useStyles();\r\n  const [completed, setCompleted] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    function progress() {\r\n      setCompleted(prevCompleted => (prevCompleted >= 100 ? 0 : prevCompleted + 10));\r\n    }\r\n\r\n    const timer = setInterval(progress, 1000);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CircularProgress className={classes.progress} variant=\"static\" value={80} />\r\n      <span style = {{marginLeft: \"15px\", position:\"relative\", top: \"-13px\", fontSize: '18px', fontWeight: 'bold'}}>User Score : 8/10</span>\r\n    </div>\r\n  );\r\n}\r\n","import React, {Component} from 'react'\r\nimport Ratings from './ratings'\r\nimport '../styles.css'\r\n\r\n\r\n\r\n\r\n\r\nclass Description extends Component{\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\n  render(){\r\n      let ratings = {...this.props.itemData.Ratings}\r\n      let rate = {...ratings[0]}\r\n      console.log(rate.Value)\r\n\r\n    return(\r\n      <div className = \"description\">\r\n\r\n        <div>\r\n          <h1>{this.props.itemData.Title} - {this.props.itemData.Year} </h1>\r\n          <span>Run Time : {this.props.itemData.Runtime} </span>\r\n        </div>\r\n        <div>\r\n         <h3>IMDB : {this.props.itemData.imdbRating === \"N/A\" ? this.props.itemData.imdbRating : this.props.itemData.imdbRating + \"/10\" }  </h3> \r\n        </div>\r\n\r\n        <div>\r\n          <h3>Overview</h3>\r\n          <p>{this.props.itemData.Plot}</p>   \r\n        </div>\r\n        <div>\r\n          <h3>Main Actors</h3>\r\n         \r\n          <div className = 'actors'>\r\n            <div>\r\n              {this.props.itemData.Actors}\r\n            </div>\r\n           \r\n            \r\n          </div>\r\n          \r\n        \r\n        </div>\r\n     \r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Description\r\n","import React, {Component} from 'react'\r\nimport Poster from './poster'\r\nimport Description from './description'\r\nimport '../styles.css'\r\n\r\n\r\n\r\n\r\n\r\nclass MainContent extends Component{\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div className = 'mainContent'>\r\n        <Poster imgPoster = {this.props.content.Poster} />\r\n        <Description itemData = {this.props.content} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport default MainContent\r\n","import React, {Component} from 'react'\r\nimport MainContent from './mainContentContainer'\r\nimport '../styles.css'\r\n\r\n\r\n\r\n\r\n\r\nclass Content extends Component{\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n\r\n  render(props){\r\n    \r\n    return(\r\n      <div className = 'content'>\r\n        <MainContent content = {this.props.data} />\r\n        \r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Content","import React, {Component} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport NavBar from './components/nav'\r\nimport Search from './components/search'\r\nimport Content from './components/Content'\r\nimport \"./styles.css\";\r\n\r\nclass App extends Component {\r\n  \r\n    constructor(){\r\n      super()\r\n      this.state = {\r\n          itemData: [{}],\r\n          name:\"\",\r\n          disp: 'none',\r\n          itemDescr: [],\r\n          test: \"\"\r\n         \r\n      }\r\n    }\r\n\r\n    componentDidMount(){\r\n      fetch(\"https://www.omdbapi.com/?apikey=ccc94984&s=spider-man%20far%20from%20home\")\r\n      .then(response => response.json())\r\n      .then(data => {\r\n\r\n            this.setState({\r\n              itemData: data.Search,\r\n              disp: 'block'\r\n            })\r\n            this.getDes()\r\n      }) \r\n    }\r\n\r\n   \r\n    \r\n    componentDidUpdate(prevProps, prevState){\r\n      if (prevState.name !== this.state.name){\r\n        fetch(\"https://www.omdbapi.com/?apikey=ccc94984&s=\" + this.state.name)\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            if (data.Response === 'True'){\r\n                this.setState({\r\n                  itemData: data.Search,\r\n                  disp: 'block',\r\n                  itemDescr: []\r\n                  \r\n                })\r\n                 this.getDes() \r\n            }else{\r\n              alert('Movie or tv Show not found, enter a valid query')\r\n            }\r\n          })\r\n         \r\n      }\r\n\r\n     \r\n\r\n    \r\n    }\r\n\r\n    getName = (e) =>{\r\n      e.preventDefault()\r\n      let itemName = e.target.elements.itemName.value\r\n      \r\n\r\n      this.setState({\r\n        name : itemName\r\n      })\r\n    }\r\n\r\n      getDes = () =>{\r\n       let x = {}\r\n        this.state.itemData.map(items =>{\r\n          fetch(\"https://www.omdbapi.com/?apikey=ccc94984&i=\" + items.imdbID )\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            this.setState({\r\n              test : data,\r\n              itemDescr: this.state.itemDescr.concat(data)\r\n            })\r\n            \r\n          })\r\n            \r\n       \r\n         \r\n        })\r\n\r\n        \r\n      }\r\n   \r\n     \r\n  \r\n  \r\n  render(){\r\n \r\n  \r\n    const output = this.state.itemDescr.map(items =>{\r\n      return (\r\n      <Content data = {items} />\r\n      )\r\n    })\r\n\r\n    console.log(output)\r\n    return (\r\n      \r\n      <div>\r\n        <NavBar />\r\n        <Search  getNameFromSearch = {this.getName} />\r\n        \r\n        \r\n        <div style = {{display : this.state.disp}}>\r\n             {output}\r\n        </div>\r\n\r\n        \r\n      </div>\r\n    );\r\n\r\n  }\r\n \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}